@implements IDisposable

@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">LangPrac</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item">
                            <a class="nav-link-custom" href="search">Search</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link-custom" href="notifications">Notifications</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link-custom" href="chats">Chats</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link-custom" href="profile">Profile</a>
                        </li>
                        <li class="nav-item">
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="Account/Login" />
                                <button type="submit" class="nav-link-custom logout-button">Logout</button>
                            </form>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <a class="nav-link-custom" href="Account/Register">Register</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link-custom" href="Account/Login">Login</a>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}