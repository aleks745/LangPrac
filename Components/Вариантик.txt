MainLayout.razor:
@inherits LayoutComponentBase

<div class="page">
    <header>
        <nav class="navbar navbar-expand-lg custom-navbar">
            <div class="container">
                <a class="navbar-brand" href="">LangPrac</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav mx-auto">
                        <NavMenu />
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main class="content">
        <div class="container">
            @Body
        </div>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">üóô</a>
</div>

MainLayout.css.razor:
.page {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    background: linear-gradient(90deg, #1a202c, #262c37); /* –î–æ–±–∞–≤–ª–µ–Ω –≥—Ä–∞–¥–∏–µ–Ω—Ç –¥–ª—è —Ñ–æ–Ω–∞ */
}

header {
    flex-shrink: 0;
}

.content {
    flex-grow: 1;
    padding: 20px 0; /* –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –æ—Ç—Å—Ç—É–ø–∞ —Å–≤–µ—Ä—Ö—É –∏ —Å–Ω–∏–∑—É */
}

.container {
    width: 100%;
    max-width: 960px; /* –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
    margin: 0 auto; /* –¶–µ–Ω—Ç—Ä–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
    padding: 0 15px; /* –ü–æ–ª—è –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
}

.custom-navbar {
    background-color: #000; /* –ò–∑–º–µ–Ω–µ–Ω —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –Ω–∞ —á–µ—Ä–Ω—ã–π */
}

.navbar-brand {
    font-size: 24px;
    font-weight: 700;
    color: #fff; /* –ò–∑–º–µ–Ω–µ–Ω —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –±–µ–ª—ã–π */
}

.navbar-nav {
    display: flex;
    justify-content: space-between;
}

@media (max-width: 991.98px) {
    .navbar-nav {
        flex-direction: column;
    }
}

#blazor-error-ui {
    background: lightyellow;
    bottom: 0;
    box-shadow: 0 -1px 2px rgba(0, 0, 0, 0.2);
    display: none;
    left: 0;
    padding: 0.6rem 1.25rem 0.7rem 1.25rem;
    position: fixed;
    width: 100%;
    z-index: 1000;
}

    #blazor-error-ui .dismiss {
        cursor: pointer;
        position: absolute;
        right: 0.75rem;
        top: 0.5rem;
    }

NavMenu.razor:
@implements IDisposable

@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg custom-navbar">
    <div class="container-fluid">
        <a class="navbar-brand" href="">LangPrac</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="auth">
                        <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
                    </NavLink>
                </li>
            </ul>
            <ul class="navbar-nav">
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="search">
                                <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Search
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="notifications">
                                <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> Notifications
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="chats">
                                <span class="bi bi-chat-nav-menu" aria-hidden="true"></span> Chats
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Manage">
                                <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                <button type="submit" class="btn btn-outline-light loginout-btn">Logout</button>
                            </form>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Register">
                                <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="Account/Login">
                                <button type="submit" class="btn btn-outline-light loginout-btn">Login</button>
                            </NavLink>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

NavMenu.razor.css:
.navbar {
    background-color: gainsboro;
}

.custom-navbar {
    background-color: #000;
}

.navbar-brand {
    font-size: 24px;
    font-weight: 700;
    color: #fff;
}

.nav-item {
    font-size: 18px;
    font-weight: 600;
    border-radius: 10px;
}

    .nav-item .nav-link {
        color: #fff;
        transition: background-color 0.3s ease, color 0.3s ease;
        border-radius: 20px;
        height: 40px;
        display: flex;
        align-items: center;
        line-height: 3rem;
        padding: 0 1rem;
    }

        .nav-item .nav-link:hover {
            background-color: orange;
            color: #fff;
        }

.loginout-btn {
    margin-left: auto; /* –í—ã–Ω–µ—Å—Ç–∏ –∫–Ω–æ–ø–∫—É Logout –≤ –ø—Ä–∞–≤—ã–π –∫—Ä–∞–π */
    color: #fff; /* –ò–∑–º–µ–Ω–µ–Ω —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –±–µ–ª—ã–π */
    border-color: #fff; /* –ò–∑–º–µ–Ω–µ–Ω —Ü–≤–µ—Ç —Ä–∞–º–∫–∏ –Ω–∞ –±–µ–ª—ã–π */
    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

    .loginout-btn:hover {
        background-color: orange; /* –ü—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –º–µ–Ω—è–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –Ω–∞ –æ—Ä–∞–Ω–∂–µ–≤—ã–π */
        border-color: orange; /* –ü—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –º–µ–Ω—è–µ–º —Ü–≤–µ—Ç —Ä–∞–º–∫–∏ –Ω–∞ –æ—Ä–∞–Ω–∂–µ–≤—ã–π */
    }

.navbar-toggler {
    border: none;
    outline: none;
}

.navbar-toggler-icon {
    background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='rgba(255, 255, 255, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
}

